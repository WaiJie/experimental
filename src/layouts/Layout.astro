---
import { ViewTransitions } from 'astro:transitions';

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
	</head>
	<body>
    <header class="site-header">
      <nav class="tab-nav">
        <button class="hamburger-button" aria-label="Toggle navigation">
          <span class="hamburger-icon"></span>
        </button>
        <ul>
          <li><a href="/" class="tab-button" data-tab="projects">Projects</a></li>
          <li><a href="/" class="tab-button" data-tab="about">About Me</a></li>
          <li><a href="/" class="tab-button" data-tab="contact">Contact</a></li>
          <li><a href="/" class="tab-button" data-tab="archive">Archive</a></li>
        </ul>
      </nav>
    </header>

    <div class="content-container">
      <slot />
    </div>

    <div id="modal-portal"></div>

    <script is:inline>
      // is:inline ensures this runs in the browser immediately
      function setupMobileNav() {
        const hamburgerButton = document.querySelector('.hamburger-button');
        const navList = document.querySelector('.tab-nav ul');

        if (!hamburgerButton || !navList) return; // Exit if elements aren't found

        hamburgerButton.addEventListener('click', () => {
          navList.classList.toggle('nav-open');
          hamburgerButton.classList.toggle('active'); // Optional: style button when open
        });

        // Close nav when a link is clicked (optional, but good UX)
        navList.querySelectorAll('a').forEach(link => {
          link.addEventListener('click', () => {
            navList.classList.remove('nav-open');
            hamburgerButton.classList.remove('active');
          });
        });
      }

      // Run the setup function once the DOM is ready
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', setupMobileNav);
      } else {
        setupMobileNav();
      }
    </script>

		<style is:global>
			:root {
        --background-grey: #23262d;
        --card-grey: #2a2f38;
        --text-white: #f0f0f0;
        --accent-navy: #5a8dee;
        --accent-navy-light: #a0c4ff;
        --border-grey: #444954;
        --header-bg: #1e2127;
			}
			html {
				font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
				background-color: var(--background-grey);
        color: var(--text-white);
				background-size: 224px;
        scroll-behavior: smooth;
			}
      body {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        min-height: 100vh;
      }
			code {
				font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;
        background-color: rgba(var(--accent-navy), 0.1);
        color: var(--accent-navy-light);
        padding: 0.1em 0.3em;
        border-radius: 4px;
			}
      h1, h2, h3, h4, h5, h6 {
        color: var(--accent-navy-light);
        margin-top: 1.5em;
        margin-bottom: 0.5em;
      }
      p {
        line-height: 1.6;
        margin-bottom: 1em;
      }
      a {
        color: var(--accent-navy);
        text-decoration: none;
        transition: color 0.2s ease;
      }
      a:hover {
        color: var(--accent-navy-light);
        text-decoration: underline;
      }

      .site-header {
        background-color: var(--header-bg);
        padding: 0.5rem 1.5rem;
        border-bottom: 1px solid var(--border-grey);
        position: sticky;
        top: 0;
        z-index: 100;
      }
      .tab-nav {
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative; /* Needed for absolute positioning of mobile menu */
      }
      .tab-nav ul {
        list-style: none;
        padding: 0;
        margin: 0;
        display: flex;
        justify-content: center;
        gap: 1rem;
      }
      .tab-nav li {
        margin: 0;
      }
      /* Style the anchor tag to look like a button */
      .tab-button, .tab-nav a {  /* Target both button and anchor */
        font-family: inherit;
        font-size: 1rem;
        font-weight: 500;
        padding: 0.75rem 1.5rem;
        border: none;
        background: none;
        color: var(--text-white);
        cursor: pointer;
        border-bottom: 3px solid transparent;
        transition: color 0.2s ease, border-color 0.2s ease;
        opacity: 0.7; /* Add opacity for inactive state */
        display: inline-block; /* Necessary for vertical alignment */
        vertical-align: middle; /* Vertically align the elements */
      }

      .tab-button:hover, .tab-nav a:hover {
        color: var(--accent-navy-light);
        opacity: 1; /* Remove opacity on hover */
      }
      .tab-button.active {
        color: var(--accent-navy-light);
        border-bottom-color: var(--accent-navy);
        opacity: 1; /* Remove opacity for active state */
        font-weight: 600;
      }

      /* Hamburger Button Styles */
      .hamburger-button {
        display: none; /* Hidden by default on larger screens */
        background: none;
        border: none;
        cursor: pointer;
        padding: 0.5rem;
        z-index: 110; /* Above the nav list */
      }

      .hamburger-icon {
        display: block;
        width: 24px;
        height: 2px;
        background-color: var(--text-white);
        position: relative;
        transition: background-color 0.3s ease;
      }

      .hamburger-icon::before,
      .hamburger-icon::after {
        content: '';
        display: block;
        width: 24px;
        height: 2px;
        background-color: var(--text-white);
        position: absolute;
        left: 0;
        transition: transform 0.3s ease, top 0.3s ease;
      }

      .hamburger-icon::before {
        top: -8px;
      }

      .hamburger-icon::after {
        top: 8px;
      }

      /* Animation for hamburger to close icon */
      .hamburger-button.active .hamburger-icon {
        background-color: transparent; /* Hide middle bar */
      }

      .hamburger-button.active .hamburger-icon::before {
        top: 0;
        transform: rotate(45deg);
      }

      .hamburger-button.active .hamburger-icon::after {
        top: 0;
        transform: rotate(-45deg);
      }


      .content-container {
        flex-grow: 1;
        padding: 1.5rem;
        max-width: 1200px;
        margin: 0 auto;
        width: 100%;
        box-sizing: border-box;
      }

      .tab-content {
        display: none;
      }
      .tab-content.active {
        display: block;
      }

      #modal-portal:empty {
        display: none;
      }

      ::-webkit-scrollbar {
        width: 8px;
      }
      ::-webkit-scrollbar-track {
        background: var(--background-grey);
      }
      ::-webkit-scrollbar-thumb {
        background-color: var(--border-grey);
        border-radius: 4px;
      }
      ::-webkit-scrollbar-thumb:hover {
        background-color: var(--accent-navy);
      }

      /* Mobile Styles */
      @media (max-width: 768px) { /* Adjust breakpoint as needed */
        .site-header {
          padding: 0.5rem 1rem; /* Slightly less padding on sides */
        }
        .tab-nav {
          justify-content: flex-start; /* Align items to the start (left) */
          align-items: flex-start; /* Align items to the top */
        }

        .hamburger-button {
          display: block; /* Show hamburger on small screens */
          padding: 0.5rem; /* Keep padding for click area */
        }

        .tab-nav ul {
          display: none; /* Hide nav list by default */
          flex-direction: column;
          position: absolute;
          top: 100%; /* Position below the header */
          left: 0;
          width: 100%;
          background-color: var(--header-bg); /* Same background as header */
          border-top: 1px solid var(--border-grey);
          padding: 1rem 0;
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
          z-index: 99; /* Below hamburger, above content */
        }

        .tab-nav ul.nav-open {
          display: flex; /* Show nav list when toggled */
        }

        .tab-nav li {
          width: 100%;
          text-align: center;
        }

        .tab-button, .tab-nav a {
          padding: 1rem; /* More padding for easier tapping */
          width: 100%; /* Make links fill the width */
          box-sizing: border-box;
          border-bottom: none; /* Remove bottom border */
        }

        .tab-button.active {
           border-bottom: none; /* Ensure no bottom border on active */
           background-color: rgba(var(--accent-navy), 0.1); /* Highlight active tab */
        }
      }
		</style>
	</body>
</html>
